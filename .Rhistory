is.na(CMAP4) ~ NA,
CMAP4/CMAP1 <0.5 & CMAP1 >=20 ~ T,
TRUE ~ F))
TD1 = df_cidp %>%
group_by(side.nerve) %>%
summarise(td1 = case_when(
is.na(CMAP1) ~ NA,
CMAP1==0 ~ NA,
Dur2/Dur1 >1.3 ~ T,
TRUE ~ F))
TD2 = df_cidp %>%
group_by(side.nerve) %>%
summarise(td2 = case_when(
is.na(CMAP1) ~ NA,
is.na(CMAP3) ~ NA,
CMAP1==0 ~ NA,
Dur3/Dur1 >1.3 ~ T,
TRUE ~ F))
TD3 = df_cidp %>%
group_by(side.nerve) %>%
summarise(td3 = case_when(
is.na(CMAP1) ~ NA,
is.na(CMAP4) ~ NA,
Dur4/Dur1 >1.3 ~ T,
TRUE ~ F))
DUR = df_cidp %>%
group_by(side.nerve) %>%
summarise(dur = case_when(
is.na(CMAP1) ~ NA,
CMAP1==0 ~ NA,
Dur1 >=100 ~ T,
TRUE ~ F))
df_cidp_table = data.frame(rbind(DML$dml,
NCV1$ncv1, NCV2$ncv2, NCV3$ncv3,
FL$fl, FA$fa,
CB1$cb1, CB2$cb2, CB3$cb3,
TD1$td1, TD2$td2, TD3$td3,
DUR$dur))
colnames(df_cidp_table) = df_cidp$side.nerve
df_cidp_table$param = c("DML", "NCV1", "NCV2", "NCV3",
"FL", "FA", "CB1", "CB2", "CB3",
"TD1", "TD2", "TD3",
"DUR")
# decision if it fulfills cidp edx criteria
mat = as.matrix(df_cidp_table[,1:8])
rownames(mat) = df_cidp_table$param
DML = mat[1,]
NCV = mat[c(2,3,4),]
temp2 = c()
for (j in 1:8) {
temp2[j] = ifelse(TRUE %in% NCV[,j], 1, 0)
temp2[j] = ifelse(all(is.na(NCV[,j])), NA, temp2[j])
}
NCV = temp2
FL = mat[5,]
FA = mat[6,]
CB = mat[c(7,8,9),]
temp2 = c()
for (k in 1:8) {
temp2[k] = ifelse(TRUE %in% CB[,k], 1, 0)
temp2[k] = ifelse(all(is.na(CB[,k])), NA, temp2[k])
}
CB = temp2
TD = mat[c(10,11,12),]
temp2 = c()
for (m in 1:8) {
temp2[m] = ifelse(TRUE %in% TD[,m], 1, 0)
temp2[m] = ifelse(all(is.na(TD[,m])), NA, temp2[m])
}
TD = temp2
DUR = mat[13,]
temp3 = rbind(DML, NCV, FL, FA, CB, TD, DUR)
temp4 = rowSums(temp3, na.rm = T)
temp4df = t(data.frame(temp4))
list_out[[i]] = cbind(data.frame(ptTable)[i,], temp4df)
}
length(list_out)
temp = list_out[[1]]
temp
for (i in 2:length(list_out)){
temp = rbind(temp, list_out[[i]])
}
edx_2020 = temp
dim(edx_2020)
write.xlsx(edx_2020, "BRM_NCS_2020_CIDP_EDX.xlsx", sheetName = "Sheet1",
col.names = T, row.names = F)
dim(edx_2020)
head(edx_2020)
?write.xlsx
write.xlsx(edx_2020, "BRM_NCS_2020_CIDP_EDX.xlsx",
sheetName = "Sheet1",
col.names = T, row.names = F)
q()
library(plotly)
head(economics)
fig <- economics
fig <- fig %>% tidyr::gather(variable, value, -date)
head(fig)
fig <- economics
fig <- fig %>% tidyr::gather(variable, value)
head(fig)
fig <- economics
fig <- fig %>% tidyr::gather(variable, value, -date)
fig <- fig %>% transform(id = as.integer(factor(variable)))
head(fig)
fig <- fig %>% plot_ly(x = ~date, y = ~value, color = ~variable, colors = "Dark2",
yaxis = ~paste0("y", id))
fig
fig <- fig %>% add_lines()
fig
fig <- fig %>% subplot(nrows = 5, shareX = TRUE)
fig
setwd("/Users/hong/Dropbox/NCViewer/Dataset")
df = read_excel("BRM_GBS_NCS_2010_2017.xlsx", sheet = 1,
col_types = c("text", "text", rep("text", 3),
rep("numeric", 113))) # age and 112 ncs parameters
df_selected = df %>%
filter(ID == "1456214")
df = read_excel("BRM_GBS_NCS_2010_2017.xlsx", sheet = 1,
col_types = c("text", "text", rep("text", 3),
rep("numeric", 113))) # age and 112 ncs parameters
library(readxl)
library(dplyr)
library(tidyr)
library(ggplot2)
library(plotly)
setwd("/Users/hong/Dropbox/NCViewer/Dataset")
df = read_excel("BRM_GBS_NCS_2010_2017.xlsx", sheet = 1,
col_types = c("text", "text", rep("text", 3),
rep("numeric", 113))) # age and 112 ncs parameters
df_selected = df %>%
filter(ID == "1456214")
ptTable = df %>%
mutate(Date = as.Date(Date, format = "%Y-%m-%d")) %>%
select(Hosp, ID, Name, Date)
df_motor = df_selected %>%
mutate(Date = as.Date(Date, format = "%Y-%m-%d")) %>%
mutate_if(is.numeric, as.integer) %>%
gather(key = "side.nerve.param",
value = "value",
c(R.MM.DML:R.TM.FL, L.MM.DML:L.TM.FL)) %>% # select only motor nerve parameters
separate(side.nerve.param,
into = c("side", "nerve", "param"),
sep = "\\.") %>%
mutate(side.nerve = paste(side, nerve, sep=".")) %>%
mutate(side.nerve = factor(side.nerve,
levels =
c("R.MM", "R.UM", "R.PM", "R.TM",
"L.TM", "L.PM", "L.UM", "L.MM")))
df_motor_all = df_motor %>%
filter(param %in% c("CMAP1", "CMAP2", "CMAP3", "CMAP4",
"DML", "Dur1", "Dur2", "Dur3", "Dur4",
"NCV1", "NCV2", "NCV3", "FL")) %>%
mutate(param = factor(param,
levels = c("CMAP1", "CMAP2", "CMAP3", "CMAP4",
"DML", "Dur1", "Dur2", "Dur3", "Dur4",
"NCV1", "NCV2", "NCV3", "FL"))) %>%
select(Date, side.nerve, param, value)
df_motor_A = df_motor_all  %>%
filter(param %in% c("DML", "Dur1", "Dur2", "Dur3", "Dur4")) %>%
mutate(cutoff = ifelse(is.na(value), NA, value)) %>%
mutate(cutoff = ifelse(value > 100, "Above ULN", "WNL"))
df_motor_B = df_motor_all  %>%
filter(param == "FL") %>%
mutate(cutoff = ifelse(is.na(value), NA, value)) %>%
mutate(cutoff = ifelse(value > 100, "Above ULN", "WNL"))
df_motor_C = df_motor_all  %>%
filter(param %in% c("CMAP1", "CMAP2", "CMAP3", "CMAP4",
"NCV1", "NCV2", "NCV3")) %>%
mutate(cutoff = ifelse(is.na(value), NA, value)) %>%
mutate(cutoff = ifelse(value < 100, "Below LLN", "WNL"))
df_motor_all = rbind(df_motor_A, df_motor_B, df_motor_C)
df = df_motor_all %>%
arrange(Date) %>%
filter(Date == first(Date))
# Radial graph for parameter and nerve view
motor_radial <- df
motor_radial <- motor_radial %>%
filter(param %in% c("CMAP1", "CMAP2",
"DML", "Dur1", "Dur2",
"NCV1", "FL")) %>% # select common parameters
mutate(param = factor(param)) %>%
mutate(side.nerve = factor(side.nerve))
df_motor_radial = motor_radial
lay = function(x) {
x %>%
layout(
polar = list(
radialaxis = list(
visible = T,
range = c(-50, (round(
max(df_motor_radial$value, na.rm = T)/50)+1)*50) # maximal 50 margin
),
angularaxis = list(
tickfont = list(size = 20)
)
),
legend = list(font = list(size = 20), x = 100, y = 0.5)
)
}
# Parameter View
# angular axis = parameter, category = nerve
df_motor_radial %>%
group_by(side.nerve) %>%
arrange(param) %>%
plot_ly(type = 'scatterpolar') %>%
add_trace(r = ~value,
theta = ~param,
name = ~side.nerve,
mode = 'lines+markers') %>%
add_trace(r = 100,
theta = ~param,
name = "ULN(LLN)",
line = list(dash = "dot")) %>%
lay()
# Parameter View
# angular axis = parameter, category = nerve
df_motor_radial %>%
group_by(side.nerve) %>%
arrange(param) %>%
plot_ly(type = 'scatterpolar') %>%
add_trace(r = ~value,
theta = ~param,
name = ~side.nerve,
mode = 'lines+markers') %>%
add_trace(r = 100,
theta = ~param,
name = "ULN(LLN)",
line = list(dash = "dot"),
fill = 'toself') %>%
lay()
# Parameter View
# angular axis = parameter, category = nerve
df_motor_radial %>%
group_by(side.nerve) %>%
arrange(param) %>%
plot_ly(type = 'scatterpolar') %>%
add_trace(r = ~value,
theta = ~param,
name = ~side.nerve,
mode = 'markers') %>%
add_trace(r = 100,
theta = ~param,
name = "ULN(LLN)",
line = list(dash = "dot"),
fill = 'toself') %>%
lay()
# Parameter View
# angular axis = parameter, category = nerve
df_motor_radial %>%
group_by(side.nerve) %>%
arrange(param) %>%
plot_ly(type = 'scatterpolar') %>%
add_trace(r = ~value,
theta = ~param,
name = ~side.nerve,
mode = 'lines') %>%
add_trace(r = 100,
theta = ~param,
name = "ULN(LLN)",
line = list(dash = "dot"),
fill = 'toself') %>%
lay()
# Parameter View
# angular axis = parameter, category = nerve
df_motor_radial %>%
group_by(side.nerve) %>%
arrange(param) %>%
plot_ly(type = 'scatterpolar') %>%
add_trace(r = ~value,
theta = ~param,
name = ~side.nerve,
mode = 'lines+markers') %>%
add_trace(r = 100,
theta = ~param,
name = "ULN(LLN)",
line = list(dash = "dot"),
fill = 'toself') %>%
lay()
# Parameter View
# angular axis = parameter, category = nerve
df_motor_radial %>%
group_by(side.nerve) %>%
arrange(param) %>%
plot_ly(type = 'scatterpolar', mode = 'lines+markers') %>%
add_trace(r = ~value,
theta = ~param,
name = ~side.nerve,
mode = 'lines+markers') %>%
add_trace(r = 100,
theta = ~param,
name = "ULN(LLN)",
line = list(dash = "dot"),
fill = 'toself') %>%
lay()
# Parameter View
# angular axis = parameter, category = nerve
df_motor_radial %>%
group_by(side.nerve) %>%
arrange(param) %>%
plot_ly(type = 'scatterpolar', mode = 'lines+markers') %>%
add_trace(r = ~value,
theta = ~param,
name = ~side.nerve) %>%
add_trace(r = 100,
theta = ~param,
name = "ULN(LLN)",
line = list(dash = "dot"),
fill = 'toself') %>%
lay()
# Nerve View
# angular axis = nerve, category = parameter
df_motor_radial %>%
group_by(param) %>%
arrange(side.nerve) %>%
plot_ly(type = 'scatterpolar', mode = 'lines+markers') %>%
add_trace(r = ~value,
theta = ~side.nerve,
name = ~param) %>%
add_trace(r = 100,
theta = ~side.nerve,
name = "ULN(LLN)",
line = list(dash = 'dot'),
fill = "toself")  %>%
lay()
# Nerve View
# angular axis = nerve, category = parameter
df_motor_radial %>%
group_by(param) %>%
arrange(side.nerve) %>%
plot_ly(type = 'scatterpolar', mode = 'lines+markers') %>%
add_trace(r = ~value,
theta = ~side.nerve,
name = ~param) %>%
add_trace(r = 100,
theta = ~side.nerve,
name = "ULN(LLN)",
line = list(dash = 'dot'),
fill = "toself")  %>%
lay() %>%
subplot()
# Nerve View
# angular axis = nerve, category = parameter
df_motor_radial %>%
group_by(param) %>%
arrange(side.nerve) %>%
plot_ly(type = 'scatterpolar',
mode = 'lines+markers',
r = ~value,
theta = ~side.nerve,
color = ~param) %>%
add_trace() %>%
add_trace(r = 100,
theta = ~side.nerve,
name = "ULN(LLN)",
line = list(dash = 'dot'),
fill = "toself")  %>%
lay() %>%
subplot()
# Nerve View
# angular axis = nerve, category = parameter
df_motor_radial %>%
group_by(param) %>%
arrange(side.nerve) %>%
plot_ly(type = 'scatterpolar',
mode = 'lines+markers',
r = ~value,
theta = ~side.nerve,
color = ~param,
colors = "Dark2") %>%
add_trace() %>%
add_trace(r = 100,
theta = ~side.nerve,
name = "ULN(LLN)",
line = list(dash = 'dot'),
fill = "toself")  %>%
lay() %>%
subplot()
head(df_motor_radial)
# Nerve View
# angular axis = nerve, category = parameter
df_motor_radial %>%
arrange(side.nerve) %>%
plot_ly(type = 'scatterpolar',
mode = 'lines+markers',
r = ~value,
theta = ~side.nerve,
color = ~param,
colors = "Dark2") %>%
add_trace() %>%
add_trace(r = 100,
theta = ~side.nerve,
name = "ULN(LLN)",
line = list(dash = 'dot'),
fill = "toself")  %>%
lay() %>%
subplot()
# Nerve View
# angular axis = nerve, category = parameter
df_motor_radial %>%
arrange(side.nerve) %>%
plot_ly(type = 'scatterpolar',
mode = 'lines+markers',
r = ~value,
theta = ~side.nerve,
color = ~param,
colors = "Dark2") %>%
add_trace() %>%
add_trace(r = 100,
theta = ~side.nerve,
name = "ULN(LLN)",
line = list(dash = 'dot'),
fill = "toself")  %>%
lay() %>%
subplot()
# Nerve View
# angular axis = nerve, category = parameter
df_motor_radial %>%
group_by(param) %>%
arrange(side.nerve) %>%
plot_ly(type = 'scatterpolar', mode = 'lines+markers') %>%
add_trace(r = ~value,
theta = ~side.nerve,
name = ~param) %>%
add_trace(r = 100,
theta = ~side.nerve,
name = "ULN(LLN)",
line = list(dash = 'dot'),
fill = "toself")  %>%
lay()
# Nerve View
# angular axis = nerve, category = parameter
df_motor_radial %>%
group_by(param) %>%
arrange(side.nerve) %>%
plot_ly(type = 'scatterpolar', mode = 'lines+markers') %>%
add_trace(r = ~value,
theta = ~side.nerve,
nameaxis = ~param) %>%
add_trace(r = 100,
theta = ~side.nerve,
name = "ULN(LLN)",
line = list(dash = 'dot'),
fill = "toself")  %>%
lay()
# Nerve View
# angular axis = nerve, category = parameter
df_motor_radial %>%
group_by(param) %>%
arrange(side.nerve) %>%
plot_ly(type = 'scatterpolar', mode = 'lines+markers') %>%
add_trace(r = ~value,
theta = ~side.nerve,
name = ~param,
subplot = T) %>%
add_trace(r = 100,
theta = ~side.nerve,
name = "ULN(LLN)",
line = list(dash = 'dot'),
fill = "toself")  %>%
lay()
# Nerve View
# angular axis = nerve, category = parameter
df_motor_radial %>%
group_by(param) %>%
arrange(side.nerve) %>%
plot_ly(type = 'scatterpolar', mode = 'lines+markers') %>%
add_trace(r = ~value,
theta = ~side.nerve,
name = ~param,
subplot = T) %>%
add_trace(r = 100,
theta = ~side.nerve,
name = "ULN(LLN)",
line = list(dash = 'dot'),
fill = "toself")  %>%
lay() %>%
subplot()
# Nerve View
# angular axis = nerve, category = parameter
df_motor_radial %>%
group_by(param) %>%
arrange(side.nerve) %>%
plot_ly(type = 'scatterpolar', mode = 'lines+markers') %>%
add_trace(r = ~value,
theta = ~side.nerve,
name = ~param) %>%
add_trace(r = 100,
theta = ~side.nerve,
name = "ULN(LLN)",
line = list(dash = 'dot'),
fill = "toself")  %>%
lay() %>%
subplot()
# Nerve View
# angular axis = nerve, category = parameter
df_motor_radial %>%
group_by(param) %>%
arrange(side.nerve) %>%
plot_ly(type = 'scatterpolar', mode = 'lines+markers') %>%
add_trace(r = ~value,
theta = ~side.nerve,
name = ~param) %>%
add_trace(r = 100,
theta = ~side.nerve,
name = "ULN(LLN)",
line = list(dash = 'dot'),
fill = "toself")  %>%
lay()
q()
getwd()
setwd("/Users/hong/Blog")
