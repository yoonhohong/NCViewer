df_selected
head(df)
df_selected
df_selected = df[1,] %>%
gather(key = "side.nerve.param",
value = "value", R.MM.DML:L.TM.FL) %>%
separate(side.nerve.param,
into = c("side", "nerve", "param"),
sep = "\\.") %>%
mutate(side.nerve = paste(side, nerve, sep=".")) %>%
mutate(side.nerve = factor(side.nerve,
levels =
c("R.MM", "R.UM", "L.MM", "L.UM",
"R.TM", "R.PM", "L.TM", "L.PM"))) %>%
filter(param %in% c("CMAP1", "CMAP2", "CMAP3",
"DML", "Dur1", "Dur2", "Dur3",
"NCV1", "NCV2", "FL")) %>%
mutate(param = factor(param,
levels = c("CMAP1", "CMAP2", "CMAP3",
"DML", "Dur1", "Dur2", "Dur3",
"NCV1", "NCV2", "FL"))) %>%
select(side.nerve, param, value)
df_selected
p <- ggplot(df_selected, aes(x=side.nerve, y=param)) +
geom_tile()
p
df_selected
df_selected = df_selected %>%
filter(param %in% c(DML, Dur1, Dur2, Dur3, FL)) %>%
mutate(cutoff = ifelse(value > 100, 1, 0))
df_selected = df_selected %>%
filter(param %in% c("DML", "Dur1", "Dur2", "Dur3", "FL")) %>%
mutate(cutoff = ifelse(value > 100, 1, 0))
df_selected
df_selected_B = df_selected %>%
filter(param %in% c("CMAP1", "CMAP2", "CMAP3", "NCV1", "NCV2")) %>%
mutate(cutoff = ifelse(value < 100, -1, 0))
df_selected_C = cbind(df_selected_A, df_selected_B)
df_selected_A = df_selected %>%
filter(param %in% c("DML", "Dur1", "Dur2", "Dur3", "FL")) %>%
mutate(cutoff = ifelse(value > 100, 1, 0))
df_selected_B = df_selected %>%
filter(param %in% c("CMAP1", "CMAP2", "CMAP3", "NCV1", "NCV2")) %>%
mutate(cutoff = ifelse(value < 100, -1, 0))
df_selected_C = cbind(df_selected_A, df_selected_B)
df_selected_C = rbind(df_selected_A, df_selected_B)
df_selected_C
p <- ggplot(df_selected, aes(x=side.nerve, y=param, fill = cutoff)) +
geom_tile()
p
p <- ggplot(df_selected, aes(x=side.nerve, y=param, fill = cutoff)) +
geom_tile() +
scale_fill_discrete()
p
df_selected_A = df_selected %>%
filter(param %in% c("DML", "Dur1", "Dur2", "Dur3", "FL")) %>%
mutate(cutoff = ifelse(value > 100, "INC", "NL"))
df_selected_B = df_selected %>%
filter(param %in% c("CMAP1", "CMAP2", "CMAP3", "NCV1", "NCV2")) %>%
mutate(cutoff = ifelse(value < 100, "DEC", "NL"))
df_selected_C = rbind(df_selected_A, df_selected_B)
p <- ggplot(df_selected, aes(x=side.nerve, y=param, fill = cutoff)) +
geom_tile() +
scale_fill_discrete()
p
p <- ggplot(df_selected, aes(x=side.nerve, y=param, fill = cutoff)) +
geom_tile() +
scale_fill_manual(c("red", "blue"))
p
p <- ggplot(df_selected, aes(x=side.nerve, y=param, fill = cutoff)) +
geom_tile()
p
p <- ggplot(df_selected, aes(x=side.nerve, y=param, fill = factor(cutoff))) +
geom_tile()
p
p
df_selected_A = df_selected %>%
filter(param %in% c("DML", "Dur1", "Dur2", "Dur3", "FL")) %>%
mutate(cutoff = ifelse(value > 100, "INC", "NL"))
df_selected_B = df_selected %>%
filter(param %in% c("CMAP1", "CMAP2", "CMAP3", "NCV1", "NCV2")) %>%
mutate(cutoff = ifelse(value < 100, "DEC", "NL"))
df_selected_C = rbind(df_selected_A, df_selected_B)
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param, fill = factor(cutoff))) +
geom_tile()
p
df_selected_C
df_selected
df_selected = df[1,] %>%
gather(key = "side.nerve.param",
value = "value", R.MM.DML:L.TM.FL) %>%
separate(side.nerve.param,
into = c("side", "nerve", "param"),
sep = "\\.") %>%
mutate(side.nerve = paste(side, nerve, sep=".")) %>%
mutate(side.nerve = factor(side.nerve,
levels =
c("R.MM", "R.UM", "L.MM", "L.UM",
"R.TM", "R.PM", "L.TM", "L.PM"))) %>%
filter(param %in% c("CMAP1", "CMAP2", "CMAP3",
"DML", "Dur1", "Dur2", "Dur3",
"NCV1", "NCV2", "FL")) %>%
mutate(param = factor(param,
levels = c("CMAP1", "CMAP2", "CMAP3",
"DML", "Dur1", "Dur2", "Dur3",
"NCV1", "NCV2", "FL"))) %>%
select(side.nerve, param, value)
df_selected
df_selected_A = df_selected %>%
filter(param %in% c("DML", "Dur1", "Dur2", "Dur3", "FL")) %>%
mutate(cutoff = ifelse(value > 100, "INC", "NL"))
df_selected_B = df_selected %>%
filter(param %in% c("CMAP1", "CMAP2", "CMAP3", "NCV1", "NCV2")) %>%
mutate(cutoff = ifelse(value < 100, "DEC", "NL"))
df_selected_B
df_selected_C = rbind(df_selected_A, df_selected_B)
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff))) +
geom_tile()
p
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff))) +
geom_tile(color = "white")
p
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff))) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red")
p
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff))) +
geom_tile(color = "white")
p
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff))) +
geom_tile(color = "white") +
geom_text(aes(value))
p
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff))) +
geom_tile(color = "white") +
geom_text(aes(label = value))
p
df_selected_A = df_selected %>%
filter(param %in% c("DML", "Dur1", "Dur2", "Dur3", "FL")) %>%
mutate(cutoff = ifelse(value > 100, "ANL", "NL"))
df_selected_B = df_selected %>%
filter(param %in% c("CMAP1", "CMAP2", "CMAP3", "NCV1", "NCV2")) %>%
mutate(cutoff = ifelse(value < 100, "BNL", "NL"))
df_selected_C = rbind(df_selected_A, df_selected_B)
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff))) +
geom_tile(color = "white") +
geom_text(aes(label = value))
p
df_selected_A = df_selected %>%
filter(param %in% c("DML", "Dur1", "Dur2", "Dur3", "FL")) %>%
mutate(cutoff = ifelse(value > 100, "Above ULN", "WNL"))
df_selected_B = df_selected %>%
filter(param %in% c("CMAP1", "CMAP2", "CMAP3", "NCV1", "NCV2")) %>%
mutate(cutoff = ifelse(value < 100, "Below LLN", "WNL"))
df_selected_C = rbind(df_selected_A, df_selected_B)
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff))) +
geom_tile(color = "white") +
geom_text(aes(label = value))
p
levels(df_selected_C$cutoff)
levels(df_selected_C$cutoff)
levels(factor(df_selected_C$cutoff))
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff))) +
geom_tile(color = "white") +
scale_fill_manual(values = c("red", "blue", "white")) +
geom_text(aes(label = value))
p
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff), alpha = 0.5)) +
geom_tile(color = "white") +
scale_fill_manual(values = c("red", "blue", "white")) +
geom_text(aes(label = value))
p
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff), alpha = 0.7)) +
geom_tile(color = "white") +
scale_fill_manual(values = c("red", "blue", "white")) +
geom_text(aes(label = value))
p
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff), alpha = 0.7)) +
geom_tile(color = "grey50") +
scale_fill_manual(values = c("red", "blue", "white")) +
geom_text(aes(label = value))
p
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff))) +
geom_tile(color = "white") +
scale_fill_manual(values = c("red", "purple", "white")) +
geom_text(aes(label = value))
p
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff))) +
geom_tile(color = "white") +
scale_fill_manual(values = c("red", "green", "white")) +
geom_text(aes(label = value))
p
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff))) +
geom_tile(color = "white") +
scale_fill_manual(values = c("red", "green", "white")) +
geom_text(aes(label = value)) +
theme_bw()
p
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff))) +
geom_tile(color = "white") +
scale_fill_manual(values = c("red", "green", "white")) +
geom_text(aes(label = value)) +
theme_light()
p
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff))) +
geom_tile(color = "grey50") +
scale_fill_manual(values = c("red", "green", "white")) +
geom_text(aes(label = value)) +
theme_light()
p
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff))) +
geom_tile(color = "grey50") +
scale_fill_manual(values = c("red", "green", "white")) +
geom_text(aes(label = value))
p
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff))) +
geom_tile(color = "grey50") +
scale_fill_manual(values = c("red", "green", "white")) +
geom_text(aes(label = value)) + theme_minimal()
p
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff))) +
geom_tile(color = "black") +
scale_fill_manual(values = c("red", "green", "white")) +
geom_text(aes(label = value)) + theme_minimal()
p
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff))) +
geom_tile(color = "black") +
scale_fill_manual(values = c("red", "green", "white")) +
geom_text(aes(label = value)) + theme_minimal() +
scale_fill_discrete(name = "")
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff))) +
geom_tile(color = "black") +
scale_fill_manual(values = c("red", "green", "white"),
name = "") +
geom_text(aes(label = value)) + theme_minimal() +
p
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff))) +
geom_tile(color = "black") +
scale_fill_manual(values = c("red", "green", "white")) +
geom_text(aes(label = value)) + theme_minimal() +
p
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff))) +
geom_tile(color = "black") +
scale_fill_manual(values = c("red", "green", "white")) +
geom_text(aes(label = value)) + theme_minimal() +
p
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff))) +
geom_tile(color = "black") +
scale_fill_manual(values = c("red", "green", "white"), name = "") +
geom_text(aes(label = value)) + theme_minimal()
p
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff))) +
geom_tile(color = "black") +
scale_fill_manual(values = c("red", "green", "white"), name = "") +
geom_text(aes(label = value)) + theme_minimal() +
theme(axis.text.x = element_text(size = 16))
p
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff))) +
geom_tile(color = "black") +
scale_fill_manual(values = c("red", "green", "white"), name = "") +
geom_text(aes(label = value)) + theme_minimal() +
theme(axis.text.x = element_text(size = 14))
p
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff))) +
geom_tile(color = "black") +
scale_fill_manual(values = c("red", "green", "white"), name = "") +
geom_text(aes(label = value)) + theme_minimal() +
theme(axis.text.x = element_text(size = 12))
p
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff))) +
geom_tile(color = "black") +
scale_fill_manual(values = c("red", "green", "white"), name = "") +
geom_text(aes(label = value)) + theme_minimal() +
theme(axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12))
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff))) +
geom_tile(color = "black") +
scale_fill_manual(values = c("red", "green", "white"), name = "") +
geom_text(aes(label = value)) + theme_minimal() +
theme(axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.x = element_blank())
p
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff))) +
geom_tile(color = "black") +
scale_fill_manual(values = c("red", "green", "white"), name = "") +
geom_text(aes(label = value)) + theme_minimal() +
theme(axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.x = element_blank(),
axis.title.y = element_blank())
p
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff))) +
geom_tile(color = "black") +
scale_fill_manual(values = c("red", "green", "white"),
name = "") +
geom_text(aes(label = value)) + theme_minimal() +
theme(axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
axis.title.x = element_blank(),
axis.title.y = element_blank())
p
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff))) +
geom_tile(color = "black") +
scale_fill_manual(values = c("red", "green", "white"),
name = "") +
geom_text(aes(label = value)) + theme_minimal() +
theme(axis.text.x = element_text(size = 10, face = "bold"),
axis.text.y = element_text(size = 10, face = "bold"),
axis.title.x = element_blank(),
axis.title.y = element_blank())
p
p <- ggplot(df_selected_C, aes(x=side.nerve, y=param,
fill = factor(cutoff))) +
geom_tile(color = "black") +
scale_fill_manual(values = c("red", "green", "white"),
name = "") +
geom_text(aes(label = value)) + theme_minimal() +
theme(axis.text.x = element_text(size = 10, face = "bold"),
axis.text.y = element_text(size = 10, face = "bold"),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.text = element_text(size = 10))
p
runApp('ncviewer.R')
head(df_selected_C)
df_selected_C
levels(df_selected_C$param)
levels(df_selected_C$side.nerve)
p <- plot_ly(
type = 'scatterpolar',
mode = "lines+markers+texts",
fill = 'none'
)
p
df_tab = rbind(df_selected_A, df_selected_B)
p <- p %>%
layout(
polar = list(
radialaxis = list(
visible = T,
range = c(0, (round(
max(df_tab$value, na.rm = T)/50)+1)*50)
),
angularaxis = list(
tickfont = list(size = 20)
)
),
legend = list(font = list(size = 20), x = 100, y = 0.5)
)
p <- p %>% add_trace(
r = c(temp[,2],temp[1,2]), # r: values in r-axes
theta = c(as.character(temp[,1]), as.character(temp[1,1])),# theta: levels of r-axes
name = levels(df_tab$param)[i] # name: record name
)}
p <- p %>%
layout(
polar = list(
radialaxis = list(
visible = T,
range = c(0, (round(
max(df_tab$value, na.rm = T)/50)+1)*50)
),
angularaxis = list(
tickfont = list(size = 20)
)
),
legend = list(font = list(size = 20), x = 100, y = 0.5)
)
for (i in 1:length(levels(df_tab$param))) {
temp = df_tab %>%
filter(param == levels(df_tab$param)[i]) %>%
select(side.nerve, value)
p <- p %>% add_trace(
r = c(temp[,2],temp[1,2]), # r: values in r-axes
theta = c(as.character(temp[,1]), as.character(temp[1,1])),# theta: levels of r-axes
name = levels(df_tab$param)[i] # name: record name
)}
p
runApp('ncviewer.R')
levels(df_tab$param)
runApp('ncviewer.R')
runApp('ncviewer.R')
levels(df_tab$side.nerve)
levels(df_tab_radial$side.nerve)
runApp('ncviewer.R')
tab = rbind(df_selected_A, df_selected_B)
tab_radial <- tab %>%
filter(param %in% c("CMAP1", "CMAP2",
"DML", "Dur1", "Dur2",
"NCV1", "FL")) %>%
mutate(param = factor(param,
levels = c("CMAP1", "CMAP2",
"DML", "Dur1", "Dur2",
"NCV1", "FL"))) %>%
mutate(side.nerve = factor(side.nerve,
levels = c("R.MM", "R.UM",
"R.PM", "R.TM",
"L.TM", "L.PM",
"L.UM", "L.MM")))
p <- plot_ly(
type = 'scatterpolar',
mode = "lines+markers+texts",
fill = 'none'
)
p <- p %>%
layout(
polar = list(
radialaxis = list(
visible = T,
range = c(0, (round(
max(tab_radial$value, na.rm = T)/50)+1)*50)
),
angularaxis = list(
tickfont = list(size = 20)
)
),
legend = list(font = list(size = 20), x = 100, y = 0.5)
)
temp = tab_radial %>%
filter(param == levels(tab_radial$param)[1]) %>%
select(side.nerve, value)
temp
levels(temp$side.nerve)
temp[,2]
temp[1,2]
temp = tab_radial %>%
filter(param == levels(tab_radial$param)[1]) %>%
select(side.nerve, value) %>%
sort(side.nerve)
with(temp, temp[order(temp$side.nerve),])
temp
temp = temp[order(temp$side.nerve),]
temp
runApp('ncviewer.R')
tab_radial
tab_radial = tab_radial %>%
group_by(side.nerve) %>%
mutate(all_na = all(is.na(value)))
tab_radial
tab_radial = tab_radial %>%
group_by(side.nerve) %>%
mutate(all_na = all(is.na(value))) %>%
filter(all_na == F)
runApp('ncviewer.R')
tab_radial
tab_radial = tab %>%
group_by(side.nerve) %>%
mutate(all_na = all(is.na(value))) %>%
filter(all_na == F)
tab_radial
levels(tab_radial$side.nerve)
levels(tab_radial$param)
tab_radial = tab %>%
group_by(side.nerve) %>%
mutate(all_na = all(is.na(value))) %>%
filter(all_na == F) %>%
filter(param %in% c("CMAP1", "CMAP2",
"DML", "Dur1", "Dur2",
"NCV1", "FL")) %>%
mutate(side.nerve = factor(side.nerve))
tab_radial = tab %>%
group_by(side.nerve) %>%
mutate(all_na = all(is.na(value))) %>%
filter(all_na == F) %>%
filter(param %in% c("CMAP1", "CMAP2",
"DML", "Dur1", "Dur2",
"NCV1", "FL"))
tab_radial$side.nerve = factor(tab_radial$side.nerve)
runApp('ncviewer.R')
runApp('ncviewer.R')
q()
library(mgcv)
library(shiny); runApp('ncviewer.R')
runApp('ncviewer.R')
getwd()
q()
library(shiny); runApp('ncviewer.R')
q()
