lwd = 1,
col=c("#440154ff", '#21908dff', '#fde725ff'),
fill = c(alpha("#440154ff",0.3), alpha('#21908dff',0.3), alpha('#fde725ff',0.3)),
cex = 0.5,
fontfamily = "sans",
cat.cex = 0.3,
cat.default.pos = "outer",
cat.pos = c(-27, 27, 135),
cat.dist = c(0.055, 0.055, 0.085),
cat.fontfamily = "sans",
cat.col = c("#440154ff", '#21908dff', '#fde725ff'),
rotation = 1
)
#Make the plot
venn.diagram(
x = list(gene_list1,
gene_list2,
gene_list3
),
category.names = c("Stop vs. Ctrl",
"Correct vs. Ctrl",
"Correct vs. Stop"),
filename = 'venn.png',
output = TRUE ,
imagetype="png" ,
height = 480 ,
width = 480 ,
resolution = 300,
lwd = 1,
col=c("#440154ff", '#21908dff', '#fde725ff'),
#  fill = c(alpha("#440154ff",0.3), alpha('#21908dff',0.3), alpha('#fde725ff',0.3)),
cex = 0.5,
fontfamily = "sans",
cat.cex = 0.3,
cat.default.pos = "outer",
cat.pos = c(-27, 27, 135),
cat.dist = c(0.055, 0.055, 0.085),
cat.fontfamily = "sans",
cat.col = c("#440154ff", '#21908dff', '#fde725ff'),
rotation = 1
)
df1
names(df1)
head(df1$`stop/control.fc`)
range(df1$`stop/control.fc`)
summary(df1)
gene_list1_up = df1 %>%
filter(`stop/control.fc`>2) %>%
select(Gene_Symbol)
library(dplyr)
gene_list1_up = df1 %>%
filter(`stop/control.fc`>2) %>%
select(Gene_Symbol)
class(gene_list1_up)
gene_list1_up = df1 %>%
filter(`stop/control.fc`>2) %>%
select(Gene_Symbol) %>%
as.character()
class(gene_list1_up)
gene_list1_down = df1 %>%
filter(`stop/control.fc`<-2) %>%
select(Gene_Symbol) %>%
as.character()
gene_list1_down = df1 %>%
filter(`stop/control.fc`<-2) %>%
select(Gene_Symbol) %>%
as.character()
gene_list1_down = df1 %>%
filter(stop/control.fc<-2) %>%
select(Gene_Symbol) %>%
as.character()
gene_list1_down = df1 %>%
filter(`stop/control.fc`< -2) %>%
select(Gene_Symbol) %>%
as.character()
length(gene_list1_down)
length(gene_list1_up)
gene_list1_down
gene_list1_up = df1 %>%
filter(`stop/control.fc`>2) %>%
select(Gene_Symbol)
gene_list1_up = gene_list1_up$Gene_Symbol
length(gene_list1_up)
gene_list1_down = df1 %>%
filter(`stop/control.fc`< -2) %>%
select(Gene_Symbol)
gene_list1_down = gene_list1_down$Gene_Symbol
length(gene_list1_down)
length(df1$Gene_ID)
gene_list2_up = df2 %>%
filter(`stop/control.fc`>2) %>%
select(Gene_Symbol)
gene_list2_up = gene_list2_up$Gene_Symbol
gene_list2_down = df2 %>%
filter(`stop/control.fc`< -2) %>%
select(Gene_Symbol)
gene_list2_down = gene_list2_down$Gene_Symbol
gene_list3_up = df3 %>%
filter(`stop/control.fc`>2) %>%
select(Gene_Symbol)
gene_list3_up = gene_list3_up$Gene_Symbol
gene_list3_down = df3 %>%
filter(`stop/control.fc`< -2) %>%
select(Gene_Symbol)
gene_list3_down = gene_list3_down$Gene_Symbol
gene_list2_up = df2 %>%
filter(`stop/control.fc`>2) %>%
select(Gene_Symbol)
names(df2)
gene_list2_up = df2 %>%
filter(`correct/control.fc`>2) %>%
select(Gene_Symbol)
gene_list2_up = gene_list2_up$Gene_Symbol
gene_list2_down = df2 %>%
filter(`correct/control.fc`< -2) %>%
select(Gene_Symbol)
gene_list2_down = gene_list2_down$Gene_Symbol
gene_list3_up = df3 %>%
filter(`correct/stop.fc`>2) %>%
select(Gene_Symbol)
gene_list3_up = gene_list3_up$Gene_Symbol
gene_list3_down = df3 %>%
filter(`correct/stop.fc`< -2) %>%
select(Gene_Symbol)
gene_list3_down = gene_list3_down$Gene_Symbol
#Make the plot
venn.diagram(
x = list(gene_list1_up,
gene_list2_up,
gene_list3_up
),
category.names = c("Stop vs. Ctrl",
"Correct vs. Ctrl",
"Correct vs. Stop"),
filename = 'up_venn.png',
output = TRUE ,
imagetype="png" ,
height = 480 ,
width = 480 ,
resolution = 300,
lwd = 1,
col=c("#440154ff", '#21908dff', '#fde725ff'),
#  fill = c(alpha("#440154ff",0.3), alpha('#21908dff',0.3), alpha('#fde725ff',0.3)),
cex = 0.5,
fontfamily = "sans",
cat.cex = 0.3,
cat.default.pos = "outer",
cat.pos = c(-27, 27, 135),
cat.dist = c(0.055, 0.055, 0.085),
cat.fontfamily = "sans",
cat.col = c("#440154ff", '#21908dff', '#fde725ff'),
rotation = 1
)
venn.diagram(
x = list(gene_list1_down,
gene_list2_down,
gene_list3_down
),
category.names = c("Stop vs. Ctrl",
"Correct vs. Ctrl",
"Correct vs. Stop"),
filename = 'down_venn.png',
output = TRUE ,
imagetype="png" ,
height = 480 ,
width = 480 ,
resolution = 300,
lwd = 1,
col=c("#440154ff", '#21908dff', '#fde725ff'),
#  fill = c(alpha("#440154ff",0.3), alpha('#21908dff',0.3), alpha('#fde725ff',0.3)),
cex = 0.5,
fontfamily = "sans",
cat.cex = 0.3,
cat.default.pos = "outer",
cat.pos = c(-27, 27, 135),
cat.dist = c(0.055, 0.055, 0.085),
cat.fontfamily = "sans",
cat.col = c("#440154ff", '#21908dff', '#fde725ff'),
rotation = 1
)
#Make the plot
venn.diagram(
x = list(gene_list1_up,
gene_list2_up,
gene_list3_down
),
category.names = c("Stop vs. Ctrl",
"Correct vs. Ctrl",
"Stop vs. Correct"),
filename = 'up_venn.png',
output = TRUE ,
imagetype="png" ,
height = 480 ,
width = 480 ,
resolution = 300,
lwd = 1,
col=c("#440154ff", '#21908dff', '#fde725ff'),
#  fill = c(alpha("#440154ff",0.3), alpha('#21908dff',0.3), alpha('#fde725ff',0.3)),
cex = 0.5,
fontfamily = "sans",
cat.cex = 0.3,
cat.default.pos = "outer",
cat.pos = c(-27, 27, 135),
cat.dist = c(0.055, 0.055, 0.085),
cat.fontfamily = "sans",
cat.col = c("#440154ff", '#21908dff', '#fde725ff'),
rotation = 1
)
venn.diagram(
x = list(gene_list1_down,
gene_list2_down,
gene_list3_up
),
category.names = c("Stop vs. Ctrl",
"Correct vs. Ctrl",
"Stop vs. Correct"),
filename = 'down_venn.png',
output = TRUE ,
imagetype="png" ,
height = 480 ,
width = 480 ,
resolution = 300,
lwd = 1,
col=c("#440154ff", '#21908dff', '#fde725ff'),
#  fill = c(alpha("#440154ff",0.3), alpha('#21908dff',0.3), alpha('#fde725ff',0.3)),
cex = 0.5,
fontfamily = "sans",
cat.cex = 0.3,
cat.default.pos = "outer",
cat.pos = c(-27, 27, 135),
cat.dist = c(0.055, 0.055, 0.085),
cat.fontfamily = "sans",
cat.col = c("#440154ff", '#21908dff', '#fde725ff'),
rotation = 1
)
gene_list_up_stop = setdiff(gene_list3_down, gene_list1_up)
gene_list_down_stop = setdiff(gene_list3_up, gene_list1_down)
head(df3)
names(df3)
?order
o1 = order(df3$`correct/stop.volume`, decreasing = T)
df3 = df3[o1,]
head(df3)
head(df$correct/stop.volume)
head(df$`correct/stop.volume``)
head(df$`correct/stop.volume`)
head(df$`correct/stop.volume`)
head(df3)
head(df3)
df3[1:10,]
temp = df3 %>%
select(Gene_Symbol, Description, `correct/stop.fc`)
temp
temp
names(df3)
o1 = order(df3$`correct/stop.volume`, df3$`correct/stop.fc`, decreasing = T)
df3 = df3[o1,]
temp = df3 %>%
select(Gene_Symbol, Description, `correct/stop.fc`,
`correct/stop.fc`)
temp
temp
temp = df3 %>%
select(Gene_Symbol, Description,
`correct/stop.fc`,
`correct/stop.volume`)
temp
o1 = order(df3$`correct/stop.volume`, decreasing = T)
df3 = df3[o1,]
temp = df3 %>%
select(Gene_Symbol, Description,
`correct/stop.fc`,
`correct/stop.volume`)
temp
dim(temp)
o2 = order(df3$`correct/stop.fc`, decreasing = T)
o1 = order(df3$`correct/stop.volume`, decreasing = T)
df3_vol_order = df3[o1,]
o2 = order(df3$`correct/stop.fc`, decreasing = T)
df3_fc_order = df3[o2,]
names(df3)
df3_fc_order[c(3,4,5,6),]
df3_fc_order[1:10,c(3,4,5,6)]
df3_vol_order[1:10,c(3,4,5,6)]
ord_vol = order(df2$`correct/control.volume`, decreasing = T)
df2[ord_vol, "Gene_Symbol"][1:10]
df2[ord_vol, "Gene_Symbol"]$Gene_Symbol[1:10]
temp = df2[ord_vol, "Gene_Symbol"]
temp
temp = df2[ord_vol, ]
temp
temp
names(temp)
ord_fc = order(df2$`correct/control.fc`, decreasing = T)
temp = df2[ord_fc,]
temp$Gene_Symbol[1:10]
ord_fc_down = order(df2$`correct/control.fc`, decreasing = F)
temp = df2[ord_fc_down,]
temp$Gene_Symbol[1:10]
ord_vol = order(df2$`correct/control.volume`, decreasing = T)
temp = df2[ord_vol, ]
temp$Gene_Symbol[1:10]
ord_vol = order(df3$`correct/control.volume`, decreasing = T)
temp = df3[ord_vol, ]
temp$Gene_Symbol[1:10]
ord_vol = order(df3$`correct/stop.volume`, decreasing = T)
temp = df3[ord_vol, ]
temp$Gene_Symbol[1:10]
ord_fc_up = order(df3$`correct/stop.fc`, decreasing = T)
temp = df3[ord_fc_up,]
temp$Gene_Symbol[1:10]
ord_fc_down = order(df3$`correct/stop.fc`, decreasing = F)
temp = df3[ord_fc_down,]
temp$Gene_Symbol[1:10]
library(shiny); runApp('~/Documents/GitHub/NCViewer/ncviewer.R')
# need the reference values.
ref = read.csv("/Users/yoonhohong/Desktop/GBS_data/Reference/reference_ncs.csv")
# need the reference values.
ref = read.csv("/Users/hong/Document/Git_Hub/GBS/reference_ncs.csv")
# need the reference values.
ref = read.csv("~/Document/Git_Hub/GBS/reference_ncs.csv")
# need the reference values.
ref = read.csv("~/Document/GitHub/GBS/reference_ncs.csv")
# need the reference values.
ref = read.csv("~/Documents/GitHub/GBS/reference_ncs.csv")
# let's get started!
setwd("~/Documents/GitHub/GBS/")
# let's get started!
setwd("~/Documents/GitHub/GBS/NCSdata_BRM")
# need raw data of a patient.
input_file = "BRM_00067159_JOS_F_60_2010-03-12.csv"
raw_ncs = read.csv(input_file)
ht = raw_ncs$height[1]
library(dplyr)
raw_ncs %>%
select(side, nerve, param, value) -> raw_ncs
ref = tbl_df(ref)
ref %>%
mutate(limit_value = ifelse(nerve == "MM" & param == "FL",
0.183*ht-4.81+3.10, limit_value)) -> ref
ref %>%
mutate(limit_value = ifelse(nerve == "UM" & param == "FL",
0.202*ht-8.51+3.82, limit_value)) -> ref
ref %>%
mutate(limit_value = ifelse(nerve == "PM" & param == "FL",
0.323*ht-8.61+4.70, limit_value)) -> ref
ref %>%
mutate(limit_value = ifelse(nerve == "TM" & param == "FL",
0.436*ht-27.01+6.22, limit_value)) -> ref
head(ref)
getwd()
setwd("/Users/hong/Documents/GitHub/NCViewer/")
df = read.csv("all_wide_appended_modified.csv")
head(df)
names(df)
df = read.csv("all_wide_appended_modified.csv")
names(df)
runApp('ncviewer.R')
df = read.csv("all_wide_appended_modified.csv")
names(df)
runApp('ncviewer.R')
df = read.csv("all_wide_appended_modified.csv")
head(df)
runApp('ncviewer.R')
df = read.csv("all_wide_appended_modified.csv")
df_tab = df[1,] %>%
gather(key = "side.nerve.param",
value = "value", R.MM.DML:L.TM.FL) %>%
# split side.nerve.param into side.nerve and param
separate(side.nerve.param,
into = c("side", "nerve", "param"),
sep = "\\.") %>%
mutate(side.nerve = paste(side, nerve, sep=".")) %>%
# type conversion: chr to factor
mutate(side.nerve = factor(side.nerve,
levels =
c("L.MM", "L.UM", "L.PM", "L.TM",
"R.TM", "R.PM", "R.UM", "R.MM"))) %>%
mutate(param = factor(param,
levels = c("CMAP1", "CMAP2", "CMAP3", "CMAP4",
"DML", "DUR1", "DUR2", "DUR3", "DUR4",
"NCV1", "NCV2", "NCV3", "FL")))
df_selected = df[1,] %>%
gather(key = "side.nerve.param",
value = "value", R.MM.DML:L.TM.FL) %>%
# split side.nerve.param into side.nerve and param
separate(side.nerve.param,
into = c("side", "nerve", "param"),
sep = "\\.") %>%
mutate(side.nerve = paste(side, nerve, sep=".")) %>%
# type conversion: chr to factor
mutate(side.nerve = factor(side.nerve,
levels =
c("L.MM", "L.UM", "L.PM", "L.TM",
"R.TM", "R.PM", "R.UM", "R.MM"))) %>%
mutate(param = factor(param,
levels = c("CMAP1", "CMAP2", "CMAP3", "CMAP4",
"DML", "DUR1", "DUR2", "DUR3", "DUR4",
"NCV1", "NCV2", "NCV3", "FL")))
# ncs data table
df_tab = df_selected %>%
select(side.nerve, param, value) %>%
spread(key = side.nerve, value = value) %>%
select_if(function(x){!all(is.na(x))})
head(df_selected)
# ncs data table
df_tab = df_selected %>%
select(side.nerve, param, value)
head(df_tab)
spread(df_tab, key = side.nerve, value = value)
df[1,]
runApp('ncviewer.R')
?paste0
paste("A", "B", collapse = ",")
paste("A", "B", "C", collapse = ",")
paste("A", "B", "C")
paste0("A", "B", "C")
paste0("A", "B", "C", collapse = ",")
paste0("A", "B", "C", collapse = "A")
paste("A", "B", "C", collapse = "A")
paste("A", "B", "C", collapse = 1)
paste("A", "B", "C", collapse = ",   ")
paste(1:10, collapse = ",   ")
paste(1:10, collapse = ",")
paste(1:10, collapse = ", ")
paste(1:10)
paste(1:10, collapse = ", ")
paste("A", "B", "C")
?sprintf
?ㅔᆼㅓ
?cat
printf("%0.4f", 3453)
sprintf("%0.4f", 3453)
sprintf("%10.4f", 3453)
sprintf("%010.4f", 3453)
sprintf("%`110.4f", 3453)
sprintf("%'110.4f", 3453)
sprintf("%'110.4f", 3453)
sprintf("%'1'10.4f", 3453)
sprintf("%'.10.4f", 3453)
sprintf("%`.10.4f", 3453)
printf("%10.4f", 3453)
sprintf("%\'.10.4f", 3453)
brks <- quantile(df, probs = seq(.05, .95, .05), na.rm = TRUE)
df = as.data.frame(cbind(matrix(round(rnorm(50), 3), 10), sample(0:1, 10, TRUE)))
df = as.data.frame(cbind(matrix(round(rnorm(50), 3), 10),
sample(0:1, 10, TRUE)))
head(df)
df
brks <- quantile(df, probs = seq(.05, .95, .05), na.rm = TRUE)
brks
length(brks)
seq(255, 40, length.out = length(brks) + 1)
library(dplyr)
clrs <- round(seq(255, 40, length.out = length(brks) + 1), 0) %>%
{paste0("rgb(255,", ., ",", ., ")")}
clrs
library(DT)
options(DT.options = list(pageLength = 5))
datatable(df) %>% formatStyle(names(df),
background = styleColorBar(range(df), 'lightblue'),
backgroundSize = '98% 88%',
backgroundRepeat = 'no-repeat',
backgroundPosition = 'center')
0:200
range(df)
datatable(df) %>% formatStyle(names(df),
background = styleColorBar(c(-1,1), 'lightblue'),
backgroundSize = '98% 88%',
backgroundRepeat = 'no-repeat',
backgroundPosition = 'center')
datatable(df) %>% formatStyle(names(df),
background = styleColorBar(c(-1,1), 'lightblue'),
backgroundSize = '98% 58%',
backgroundRepeat = 'no-repeat',
backgroundPosition = 'center')
datatable(df) %>% formatStyle(names(df),
background = styleColorBar(c(-1,1), 'lightblue'),
backgroundSize = '98% 88%',
backgroundRepeat = 'no-repeat',
backgroundPosition = 'center')
datatable(df) %>% formatStyle(names(df),
background = styleColorBar(c(-1,1), 'lightblue'),
backgroundSize = '100% 88%',
backgroundRepeat = 'no-repeat',
backgroundPosition = 'center')
datatable(df) %>% formatStyle(names(df),
background = styleColorBar(c(-1,1), 'lightblue'),
backgroundSize = '98% 88%',
backgroundRepeat = 'no-repeat',
backgroundPosition = 'center')
df = data.frame(
V1 = c(5, -31, '-2'),
V2 = c(-5, -7, '2'),
V3 = c(4, -10, '22'))
DT = DT::datatable(df) %>%
formatStyle('V1', backgroundColor = styleInterval(c(0),c('red','blue')))
DT
df = as.data.frame(cbind(matrix(round(rnorm(50), 3), 10),
sample(0:1, 10, TRUE)))
datatable(df) %>% formatStyle(names(df),
background = styleColorBar(c(-1,1), 'lightblue'),
backgroundSize = '98% 88%',
backgroundRepeat = 'no-repeat',
backgroundPosition = 'center')
runApp('ncviewer.R')
brks <- quantile(c(0,200), probs = seq(.05, .95, .05), na.rm = TRUE)
brks
clrs <- colorRampPalette(c("red", "white", "blue"))(20)
datatable(df) %>% formatStyle(names(df), backgroundColor = styleInterval(brks, clrs))
runApp('ncviewer.R')
q()
